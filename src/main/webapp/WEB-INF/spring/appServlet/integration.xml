<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:si-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.0.xsd
		http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-2.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.0.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.0.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Allow property place holders -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" />

	<!-- General SI things. -->
	<si:annotation-config />

	<!-- FTP - pick up the zoneinfo files -->
	<bean id="zoneinfoFtpClientFactory"
		class="org.springframework.integration.ftp.session.DefaultFtpSessionFactory">
		<property name="host" value="elsie.nci.nih.gov" />
		<property name="port" value="22" />
		<property name="username" value="anonymous" />
		<property name="password" value="anonymous" />
		<property name="clientMode" value="0" />
		<property name="bufferSize" value="100000" />
	</bean>

	<si-ftp:inbound-channel-adapter id="zoneInfoFtpInbound"
		channel="zoneinfoChannel" session-factory="zoneinfoFtpClientFactory"
		charset="UTF-8" auto-create-local-directory="true"
		delete-remote-files="false" filename-pattern="tzdata*.tar.gz"
		remote-directory="pub" local-directory="${java.io.tmpdir}${file.separator}tzdata">
		<si:poller cron="0 * * * * *" max-messages-per-poll="-1" />
	</si-ftp:inbound-channel-adapter>

	<si:channel id="zoneinfoChannel" datatype="java.io.File" />

	<si:service-activator input-channel="zoneinfoChannel"
		ref="timeZoneService" method="refreshTimeZones" />

	<!-- Messaging -->
	<bean id="tzdataPublisher" class="com.classactionpl.tz.TzdataPublisherImpl" />

	<si:channel id="publishTzdata" datatype="java.lang.String" />

	<si:channel id="tzdataChannel" datatype="java.lang.String" />

	<stream:stdout-channel-adapter channel="tzdataChannel" />

	<!-- AMQP - share time zone resources -->
	<bean id="amqpConnectionFactory"
		class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
		<constructor-arg value="localhost" />
		<property name="username" value="guest" />
		<property name="password" value="guest" />
	</bean>
	<bean id="amqpTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
		<property name="connectionFactory" ref="amqpConnectionFactory" />
	</bean>
	<rabbit:admin connection-factory="amqpConnectionFactory" />
	<rabbit:queue name="com.classactionpl.tz.tzdata" />
	<amqp:inbound-channel-adapter queue-names="com.classactionpl.tz.tzdata"
		channel="tzdataChannel" connection-factory="amqpConnectionFactory" />
	<rabbit:fanout-exchange name="com.classactionpl.tz.tzdata.fanout">
		<rabbit:bindings>
			<rabbit:binding queue="com.classactionpl.tz.tzdata" />
		</rabbit:bindings>
	</rabbit:fanout-exchange>
	<amqp:outbound-channel-adapter channel="publishTzdata"
		exchange-name="com.classactionpl.tz.tzdata.fanout" amqp-template="amqpTemplate" />
		
	<!-- JMS for testing performance out compared with AMQP <bean id="jmsConnectionFactory" 
		class="org.springframework.jms.connection.CachingConnectionFactory"> <property 
		name="targetConnectionFactory"> <bean class="org.apache.activemq.ActiveMQConnectionFactory"> 
		<property name="brokerURL" value="tcp://localhost:61616" /> </bean> </property> 
		<property name="sessionCacheSize" value="10" /> <property name="cacheProducers" 
		value="false" /> </bean> <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"> 
		<property name="connectionFactory" ref="jmsConnectionFactory" /> </bean> 
		<bean id="tzdataJmsTopic" class="org.apache.activemq.command.ActiveMQTopic"> 
		<constructor-arg value="com.classactionpl.tz.tzdata" /> </bean> <jms:message-driven-channel-adapter 
		destination="tzdataJmsTopic" channel="tzdataChannel" connection-factory="jmsConnectionFactory" 
		/> <jms:outbound-channel-adapter destination="tzdataJmsTopic" channel="publishTzdata" 
		jms-template="jmsTemplate" /> -->

</beans>
